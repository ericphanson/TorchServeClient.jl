# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""apiDescription_500_response

    ApiDescription500Response(;
        code=nothing,
        type=nothing,
        message=nothing,
    )

    - code::Int64 : Error code.
    - type::String : Error type.
    - message::String : Error message.
"""
Base.@kwdef mutable struct ApiDescription500Response <: OpenAPI.APIModel
    code::Union{Nothing, Int64} = nothing
    type::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing

    function ApiDescription500Response(code, type, message, )
        OpenAPI.validate_property(ApiDescription500Response, Symbol("code"), code)
        OpenAPI.validate_property(ApiDescription500Response, Symbol("type"), type)
        OpenAPI.validate_property(ApiDescription500Response, Symbol("message"), message)
        return new(code, type, message, )
    end
end # type ApiDescription500Response

const _property_types_ApiDescription500Response = Dict{Symbol,String}(Symbol("code")=>"Int64", Symbol("type")=>"String", Symbol("message")=>"String", )
OpenAPI.property_type(::Type{ ApiDescription500Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApiDescription500Response[name]))}

function check_required(o::ApiDescription500Response)
    o.code === nothing && (return false)
    o.type === nothing && (return false)
    o.message === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ApiDescription500Response }, name::Symbol, val)
end
