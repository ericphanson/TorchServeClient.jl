# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""apiDescription_200_response

    ApiDescription200Response(;
        openapi=nothing,
        info=nothing,
        paths=nothing,
    )

    - openapi::String
    - info::Any
    - paths::Any
"""
Base.@kwdef mutable struct ApiDescription200Response <: OpenAPI.APIModel
    openapi::Union{Nothing, String} = nothing
    info::Union{Nothing, Any} = nothing
    paths::Union{Nothing, Any} = nothing

    function ApiDescription200Response(openapi, info, paths, )
        OpenAPI.validate_property(ApiDescription200Response, Symbol("openapi"), openapi)
        OpenAPI.validate_property(ApiDescription200Response, Symbol("info"), info)
        OpenAPI.validate_property(ApiDescription200Response, Symbol("paths"), paths)
        return new(openapi, info, paths, )
    end
end # type ApiDescription200Response

const _property_types_ApiDescription200Response = Dict{Symbol,String}(Symbol("openapi")=>"String", Symbol("info")=>"Any", Symbol("paths")=>"Any", )
OpenAPI.property_type(::Type{ ApiDescription200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApiDescription200Response[name]))}

function check_required(o::ApiDescription200Response)
    o.openapi === nothing && (return false)
    o.info === nothing && (return false)
    o.paths === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ApiDescription200Response }, name::Symbol, val)
end
